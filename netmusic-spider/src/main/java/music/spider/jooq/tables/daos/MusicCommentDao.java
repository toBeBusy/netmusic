/**
 * This class is generated by jOOQ
 */
package music.spider.jooq.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import music.spider.jooq.tables.MusicComment;
import music.spider.jooq.tables.records.MusicCommentRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class MusicCommentDao extends DAOImpl<MusicCommentRecord, music.spider.jooq.tables.pojos.MusicComment, Long> {

    /**
     * Create a new MusicCommentDao without any configuration
     */
    public MusicCommentDao() {
        super(MusicComment.MUSIC_COMMENT, music.spider.jooq.tables.pojos.MusicComment.class);
    }

    /**
     * Create a new MusicCommentDao with an attached configuration
     */
    @Autowired
    public MusicCommentDao(Configuration configuration) {
        super(MusicComment.MUSIC_COMMENT, music.spider.jooq.tables.pojos.MusicComment.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(music.spider.jooq.tables.pojos.MusicComment object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<music.spider.jooq.tables.pojos.MusicComment> fetchById(Long... values) {
        return fetch(MusicComment.MUSIC_COMMENT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public music.spider.jooq.tables.pojos.MusicComment fetchOneById(Long value) {
        return fetchOne(MusicComment.MUSIC_COMMENT.ID, value);
    }

    /**
     * Fetch records that have <code>song_id IN (values)</code>
     */
    public List<music.spider.jooq.tables.pojos.MusicComment> fetchBySongId(Long... values) {
        return fetch(MusicComment.MUSIC_COMMENT.SONG_ID, values);
    }

    /**
     * Fetch records that have <code>comment IN (values)</code>
     */
    public List<music.spider.jooq.tables.pojos.MusicComment> fetchByComment(String... values) {
        return fetch(MusicComment.MUSIC_COMMENT.COMMENT, values);
    }
}
