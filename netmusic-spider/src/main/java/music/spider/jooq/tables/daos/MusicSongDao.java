/**
 * This class is generated by jOOQ
 */
package music.spider.jooq.tables.daos;


import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import music.spider.jooq.tables.MusicSong;
import music.spider.jooq.tables.records.MusicSongRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class MusicSongDao extends DAOImpl<MusicSongRecord, music.spider.jooq.tables.pojos.MusicSong, Long> {

    /**
     * Create a new MusicSongDao without any configuration
     */
    public MusicSongDao() {
        super(MusicSong.MUSIC_SONG, music.spider.jooq.tables.pojos.MusicSong.class);
    }

    /**
     * Create a new MusicSongDao with an attached configuration
     */
    @Autowired
    public MusicSongDao(Configuration configuration) {
        super(MusicSong.MUSIC_SONG, music.spider.jooq.tables.pojos.MusicSong.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(music.spider.jooq.tables.pojos.MusicSong object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<music.spider.jooq.tables.pojos.MusicSong> fetchById(Long... values) {
        return fetch(MusicSong.MUSIC_SONG.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public music.spider.jooq.tables.pojos.MusicSong fetchOneById(Long value) {
        return fetchOne(MusicSong.MUSIC_SONG.ID, value);
    }

    /**
     * Fetch records that have <code>ranking_id IN (values)</code>
     */
    public List<music.spider.jooq.tables.pojos.MusicSong> fetchByRankingId(Long... values) {
        return fetch(MusicSong.MUSIC_SONG.RANKING_ID, values);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<music.spider.jooq.tables.pojos.MusicSong> fetchByName(String... values) {
        return fetch(MusicSong.MUSIC_SONG.NAME, values);
    }

    /**
     * Fetch records that have <code>ranking_no IN (values)</code>
     */
    public List<music.spider.jooq.tables.pojos.MusicSong> fetchByRankingNo(Integer... values) {
        return fetch(MusicSong.MUSIC_SONG.RANKING_NO, values);
    }

    /**
     * Fetch records that have <code>time IN (values)</code>
     */
    public List<music.spider.jooq.tables.pojos.MusicSong> fetchByTime(Integer... values) {
        return fetch(MusicSong.MUSIC_SONG.TIME, values);
    }

    /**
     * Fetch records that have <code>singer IN (values)</code>
     */
    public List<music.spider.jooq.tables.pojos.MusicSong> fetchBySinger(String... values) {
        return fetch(MusicSong.MUSIC_SONG.SINGER, values);
    }

    /**
     * Fetch records that have <code>url IN (values)</code>
     */
    public List<music.spider.jooq.tables.pojos.MusicSong> fetchByUrl(String... values) {
        return fetch(MusicSong.MUSIC_SONG.URL, values);
    }

    /**
     * Fetch records that have <code>update_time IN (values)</code>
     */
    public List<music.spider.jooq.tables.pojos.MusicSong> fetchByUpdateTime(Timestamp... values) {
        return fetch(MusicSong.MUSIC_SONG.UPDATE_TIME, values);
    }
}
