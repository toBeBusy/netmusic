/**
 * This class is generated by jOOQ
 */
package music.spider.jooq.tables.daos;


import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import music.spider.jooq.tables.MusicRanking;
import music.spider.jooq.tables.records.MusicRankingRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class MusicRankingDao extends DAOImpl<MusicRankingRecord, music.spider.jooq.tables.pojos.MusicRanking, Long> {

    /**
     * Create a new MusicRankingDao without any configuration
     */
    public MusicRankingDao() {
        super(MusicRanking.MUSIC_RANKING, music.spider.jooq.tables.pojos.MusicRanking.class);
    }

    /**
     * Create a new MusicRankingDao with an attached configuration
     */
    @Autowired
    public MusicRankingDao(Configuration configuration) {
        super(MusicRanking.MUSIC_RANKING, music.spider.jooq.tables.pojos.MusicRanking.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(music.spider.jooq.tables.pojos.MusicRanking object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<music.spider.jooq.tables.pojos.MusicRanking> fetchById(Long... values) {
        return fetch(MusicRanking.MUSIC_RANKING.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public music.spider.jooq.tables.pojos.MusicRanking fetchOneById(Long value) {
        return fetchOne(MusicRanking.MUSIC_RANKING.ID, value);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<music.spider.jooq.tables.pojos.MusicRanking> fetchByName(String... values) {
        return fetch(MusicRanking.MUSIC_RANKING.NAME, values);
    }

    /**
     * Fetch records that have <code>url IN (values)</code>
     */
    public List<music.spider.jooq.tables.pojos.MusicRanking> fetchByUrl(String... values) {
        return fetch(MusicRanking.MUSIC_RANKING.URL, values);
    }

    /**
     * Fetch records that have <code>update_time IN (values)</code>
     */
    public List<music.spider.jooq.tables.pojos.MusicRanking> fetchByUpdateTime(Timestamp... values) {
        return fetch(MusicRanking.MUSIC_RANKING.UPDATE_TIME, values);
    }
}
