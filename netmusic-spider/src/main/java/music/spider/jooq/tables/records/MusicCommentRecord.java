/**
 * This class is generated by jOOQ
 */
package music.spider.jooq.tables.records;


import javax.annotation.Generated;

import music.spider.jooq.tables.MusicComment;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MusicCommentRecord extends UpdatableRecordImpl<MusicCommentRecord> implements Record3<Long, Long, String> {

    private static final long serialVersionUID = 118730806;

    /**
     * Setter for <code>music_spider.music_comment.id</code>. 自增主键
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>music_spider.music_comment.id</code>. 自增主键
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>music_spider.music_comment.song_id</code>. 关联的歌曲Id
     */
    public void setSongId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>music_spider.music_comment.song_id</code>. 关联的歌曲Id
     */
    public Long getSongId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>music_spider.music_comment.comment</code>. 评论
     */
    public void setComment(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>music_spider.music_comment.comment</code>. 评论
     */
    public String getComment() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Long, Long, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Long, Long, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return MusicComment.MUSIC_COMMENT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return MusicComment.MUSIC_COMMENT.SONG_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return MusicComment.MUSIC_COMMENT.COMMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getSongId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getComment();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MusicCommentRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MusicCommentRecord value2(Long value) {
        setSongId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MusicCommentRecord value3(String value) {
        setComment(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MusicCommentRecord values(Long value1, Long value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MusicCommentRecord
     */
    public MusicCommentRecord() {
        super(MusicComment.MUSIC_COMMENT);
    }

    /**
     * Create a detached, initialised MusicCommentRecord
     */
    public MusicCommentRecord(Long id, Long songId, String comment) {
        super(MusicComment.MUSIC_COMMENT);

        set(0, id);
        set(1, songId);
        set(2, comment);
    }
}
